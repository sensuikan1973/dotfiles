name: setup macOS

on:
  pull_request:
  push:
    branches: [main]

jobs:
  setup:
    runs-on: macos-10.15
    timeout-minutes: 10
    defaults:
      run:
        shell: zsh {0} # See: https://github.com/actions/virtual-environments/issues/264#issuecomment-574032011
    steps:
      - name: display shell info
        run: echo $ZSH_NAME $ZSH_VERSION

      - name: checkout repository to HOME
        run: |-
          git clone https://github.com/sensuikan1973/dotfiles.git ~/dotfiles
          cd ~/dotfiles
          git fetch origin '+refs/pull/*:refs/remotes/pr/*' # See: https://qiita.com/sonots/items/16df445132e704198e3e
          git checkout $GITHUB_SHA

      # - name: debug
      #   uses: mxschmitt/action-tmate@v3

      # setup twice
      # NOTE: I want to ensure idempotent
      - name: 1st, run setup script
        run: cd ~/dotfiles && ./setup.zsh
      - name: 2nd, run setup script
        run: cd ~/dotfiles && ./setup.zsh

      - name: rough command test after relogin
        id: command_test
        run: |-
          exec zsh --login
          set -x

          echo "::set-output name=uname::$(uname)"

          echo "::set-output name=alias_ls::$(la && ll)"
          echo "::set-output name=alias_git::$(cd ~/dotfiles && g status && fp)"

          echo "::set-output name=brew::$(brew cleanup && brew upgrade && brew doctor)"

          echo "::set-output name=package_manager::$(rbenv versions)"

          echo "::set-output name=crontab::$(rcrontab -l)"

          relogin

      - name: debug print result
        run: |-
          # See: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#grouping-log-lines
          echo "::group::basic info"
          echo "${{ steps.command_test.outputs.uname }}"
          echo "::endgroup::"

          echo "::group::alias"
          echo "${{ steps.command_test.outputs.alias_ls }}"
          echo "${{ steps.command_test.outputs.alias_git }}"
          echo "::endgroup::"

          echo "::group::brew"
          echo "${{ steps.command_test.outputs.brew }}"
          echo "::endgroup::"

          echo "::group::package_manager"
          echo "${{ steps.command_test.outputs.package_manager }}"
          echo "::endgroup::"

          echo "::group::crontab"
          echo "${{ steps.command_test.outputs.crontab }}"
          echo "::endgroup::"
